openapi: 3.0.0
info:
  title: User Management Service
  description: "A service for registering, logging in and logging out users"
  contact:
    name: Hari prasath
    email: hariprasath.narayanasamy@gmail.com
  version: 1.0.0
servers:
- url: http://127.0.0.1:7000/userservice/v1
tags:
- name: Users
paths:
  /users:
    get:
      tags:
      - Users
      description: Get  all users
      operationId: get_all_users
      responses:
        "200":
          description: Fetches all users
          content:
            applications/json:
              schema:
                $ref: '#/components/schemas/user_details'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401UnauthorizedResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenResponse'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404NotFoundResponse'
        "503":
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/503ServerUnavailableResponse'
        default:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400BadRequestResponse'
      x-openapi-router-controller: swagger_server.controllers.users_controller
    post:
      tags:
      - Users
      description: Add new user
      operationId: add_user
      requestBody:
        description: Adding new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/user_info'
      responses:
        "200":
          description: Adding new user
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/201UserCreatedResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401UnauthorizedResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenResponse'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404NotFoundResponse'
        "503":
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/503ServerUnavailableResponse'
        default:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400BadRequestResponse'
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/{user_id}:
    get:
      tags:
      - Users
      description: Get details of one user
      operationId: get_user_details
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: user details provided
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200UserDetailsResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401UnauthorizedResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404NotFoundResponse'
        "503":
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/503ServerUnavailableResponse'
      x-openapi-router-controller: swagger_server.controllers.users_controller
    delete:
      tags:
      - Users
      description: delete users
      operationId: delete_user
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      responses:
        "200":
          description: user deleted
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200UserDeletedResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401UnauthorizedResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenResponse'
        "404":
          description: Conflict
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404NotFoundResponse'
        "503":
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/503ServerUnavailableResponse'
      x-openapi-router-controller: swagger_server.controllers.users_controller
    patch:
      tags:
      - Users
      description: Update one key of user details
      operationId: update_user_data
      parameters:
      - name: user_id
        in: path
        required: true
        style: simple
        explode: false
        schema:
          type: string
      requestBody:
        description: Adds price and offers
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/update_user_info'
      responses:
        "200":
          description: user updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200UpdateUserResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401UnauthorizedResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenResponse'
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404NotFoundResponse'
        "503":
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/503ServerUnavailableResponse'
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/login:
    post:
      tags:
      - Users
      description: login user
      operationId: login_user
      requestBody:
        description: Login new user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/login_info'
      responses:
        "201":
          description: user logged in successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/login_details'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401UnauthorizedResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenResponse'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404NotFoundResponse'
        "503":
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/503ServerUnavailableResponse'
        default:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400BadRequestResponse'
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/logout:
    post:
      tags:
      - Users
      description: logout user
      operationId: logout_user
      requestBody:
        description: logout user
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token_info'
      responses:
        "200":
          description: successful operation
      x-openapi-router-controller: swagger_server.controllers.users_controller
  /users/validate:
    post:
      tags:
      - Users
      description: validate user token
      operationId: validate_user_token
      requestBody:
        description: Validate user token
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/token_info'
      responses:
        "200":
          description: token valid
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/200UserDetailsResponse'
        "401":
          description: Unauthorized
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/401UnauthorizedResponse'
        "403":
          description: Forbidden
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/403ForbiddenResponse'
        "404":
          description: Not found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/404NotFoundResponse'
        "503":
          description: Server unavailable
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/503ServerUnavailableResponse'
        default:
          description: Bad request
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/400BadRequestResponse'
      x-openapi-router-controller: swagger_server.controllers.users_controller
components:
  schemas:
    user_info_sans_pwd:
      required:
      - email
      - user_name
      - password
      - phone_number
      - role
      type: object
      properties:
        user_name:
          type: string
        first_name:
          type: string
        last_name:
          type: string
        email:
          type: string
        phone_number:
          type: string
        role:
          type: string
          enum:
            - Customer
            - Marketing
            - Dealer
            - Production
    user_info:
      allOf:
      - $ref: '#/components/schemas/user_info_sans_pwd'
      - type: object
        properties:
          password_hash:
            type: string
    update_user_info:
      type: object
      properties:
        key:
          type: string
          enum:
          - user_name
          - email
          - phone_number
          - password
        value:
          type: string
    user_details:
      allOf:
      - $ref: '#/components/schemas/user_info_sans_pwd'
      - type: object
        properties:
          user_id:
            type: string
    login_info:
      required:
      - password
      - user_id
      - user_name
      type: object
      properties:
        user_id:
          type: string
        user_name:
          type: string
        password:
          type: string
    login_details:
      allOf:
      - type: object
        properties:
          token_id:
            type: string
    token_info:
      required:
      - token
      type: object
      properties:
        token:
          type: string
    "200UserDetailsResponse":
      type: object
      properties:
        code:
          type: integer
          default: 200
        message:
          type: string
          default: ok
        data:
          type: array
          items:
            $ref: '#/components/schemas/user_details'
      example:
        code: 0
        data:
        - ""
        - ""
        message: ok
    "201UserCreatedResponse":
      type: object
      properties:
        code:
          type: integer
          default: 201
        message:
          type: string
          default: ok
        data:
          type: array
          items:
            $ref: '#/components/schemas/user_details'
      example:
        code: 0
        data:
        - ""
        - ""
        message: ok
    "200UpdateUserResponse":
      type: object
      properties:
        code:
          type: integer
          default: 200
        message:
          type: string
          default: ok
        data:
          type: array
          items:
            $ref: '#/components/schemas/user_info'
      example:
        code: 0
        data:
        - ""
        - ""
        message: ok
    "200UserDeletedResponse":
      type: object
      properties:
        code:
          type: integer
          default: 200
        message:
          type: string
          default: ok
        data:
          type: array
          items:
            $ref: '#/components/schemas/user_details'
      example:
        code: 0
        data:
        - ""
        - ""
        message: ok
    "400BadRequestResponse":
      type: object
      properties:
        code:
          type: integer
          default: 400
        message:
          type: string
          default: BAD_REQUEST
        data:
          type: array
          items:
            type: object
    "401UnauthorizedResponse":
      type: object
      properties:
        code:
          type: integer
          default: 401
        message:
          type: string
          default: UNAUTHORIZED
    "403ForbiddenResponse":
      type: object
      properties:
        code:
          type: integer
          default: 403
        message:
          type: string
          default: FORBIDDEN
    "404NotFoundResponse":
      type: object
      properties:
        code:
          type: integer
          default: 404
        message:
          type: string
          default: NOT_FOUND
    "503ServerUnavailableResponse":
      type: object
      properties:
        code:
          type: integer
          default: 503
        message:
          type: string
          default: SERVER_UNAVAILABLE
    "409ConflictResponse":
      type: object
      properties:
        code:
          type: integer
          default: 409
        message:
          type: string
          default: CONFLICT

